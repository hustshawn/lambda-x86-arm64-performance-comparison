name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_test.txt
        pip install -r src/requirements.txt

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 src/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Format check with black
      run: |
        black --check src/ tests/

    - name: Type check with mypy
      run: |
        mypy src/ --ignore-missing-imports

    - name: Test with pytest
      run: |
        pytest tests/ -v --cov=src --cov-report=xml --cov-report=html

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  validate-sam:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup SAM CLI
      uses: aws-actions/setup-sam@v2

    - name: Validate SAM template
      run: |
        sam validate

    - name: Build SAM application
      run: |
        sam build

    - name: Run local tests
      run: |
        python validate_local_setup.py

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Run security scan with bandit
      run: |
        pip install bandit
        bandit -r src/ -f json -o bandit-report.json || true

    - name: Upload security scan results
      uses: actions/upload-artifact@v3
      with:
        name: security-scan-results
        path: bandit-report.json

  documentation:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install documentation dependencies
      run: |
        pip install -r requirements_test.txt

    - name: Check documentation links
      run: |
        # Check for broken links in markdown files
        find . -name "*.md" -exec grep -l "http" {} \; | head -10

    - name: Validate documentation structure
      run: |
        # Ensure all required documentation files exist
        test -f README.md
        test -f CONTRIBUTING.md
        test -f LICENSE
        test -f CHANGELOG.md
        test -f docs/API_REFERENCE.md
        test -f docs/PERFORMANCE_ANALYSIS.md
        test -f LOCAL_TESTING.md
        test -f DEPLOYMENT_GUIDE.md